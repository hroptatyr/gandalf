dnl -------------------------------------------------------------------------
dnl Autoconf startup.
dnl -------------------------------------------------------------------------

AC_PREREQ([2.63])
AC_INIT([gandalf], m4_esyscmd([./git-version-gen]), [https://trac.ga-group.nl/freundt_devel/])
AC_CONFIG_AUX_DIR([.])
AC_CONFIG_HEADER([lib/config.h])
AC_CONFIG_MACRO_DIR([m4])
AC_CONFIG_SRCDIR([lib/])

dnl -------------------------------------------------------------------------
dnl Local copyright notices.
dnl -------------------------------------------------------------------------

AC_COPYRIGHT(
[#### Configuration script for gandalf, i.e. rolf and milf.
#### Copyright (C) 2011  Sebastian Freundt

### Don't edit this script!
### This script was automatically generated by the `autoconf' program
### from the file `./configure.ac'.
### To rebuild it, execute the command
###     autoreconf
])

AM_INIT_AUTOMAKE([foreign])

## initialise our cool message nest levels
SXE_INIT_MSG_LEVEL

if test -n "${CFLAGS}"; then
	CFLAGS="-g -O3 -Wall -Wunused -Wunused-function"
fi

## the build chain
AC_PROG_CC(["icc -static-intel" icc gcc cc])
AC_PROG_CC_C99
AC_PROG_YACC
AM_PROG_LEX
LT_INIT

AC_CHECK_HEADERS([stdbool.h])
AC_CHECK_HEADERS([fcntl.h])

## event loop
SXE_CHECK_LIBEV

## database stuff
SXE_CHECK_MYSQL
SXE_CHECK_SQLITE

## check for libxml to process fixml
PKG_CHECK_MODULES([LIBXML2], [libxml-2.0 >= 2.7])
pushdef([use_libxml2], [test -n "${LIBXML2_LIBS}"])
AM_CONDITIONAL([USE_LIBXML2], []use_libxml2[])
if []use_libxml2[]; then
	AC_DEFINE([HAVE_LIBXML2], [1], [Define if libxml2 support is there])
fi
popdef([use_libxml2])

## check for unserding
PKG_CHECK_MODULES([unserding], [unserding >= 0.1.1])

## just so we know what to build
AC_ARG_ENABLE([server], [
AS_HELP_STRING([--enable-server], [Build the server component, default: no.])],
	[enable_server="${enableval}"], [enable_server="no"])
AM_CONDITIONAL([BUILD_SERVER], [test "${enable_server}" = "yes"])
AC_ARG_ENABLE([cliapps], [
AS_HELP_STRING([--enable-client], [Build the client apps, default: yes.])],
	[enable_cliapps="${enableval}"], [enable_cliapps="yes"])
AM_CONDITIONAL([BUILD_CLIAPPS], [test "${enable_cliapps}" = "yes"])
AM_CONDITIONAL([BUILD_LIBRARY], [test "yes" = "yes"])

AC_CONFIG_FILES([Makefile])
AC_CONFIG_FILES([cli/Makefile])
AC_CONFIG_FILES([lib/Makefile])
AC_CONFIG_FILES([srv/Makefile])
AC_CONFIG_FILES([gandalf.pc])
AC_OUTPUT

echo
echo
echo "Build summary"
echo "============="
echo
echo "Build server: ${BUILD_SERVER_FALSE:+yes}"
echo "Build cliapps: ${BUILD_CLIAPPS_FALSE:+yes}"
echo "Build library: ${BUILD_LIBRARY_FALSE:+yes}"
echo "DBMS:${DBMS}"
echo "XML: ${USE_LIBXML2_FALSE:+libxml2}"
echo

dnl configure.ac ends here
